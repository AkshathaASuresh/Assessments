ProblemSet02 - Questions

ProblemSet02 - Questions

1. Write a valid SQL statement that calculates the total weight of all corn cobs that were picked from the garden:

mysql> SELECT SUM(P.WEIGHT) FROM PICKED P INNER JOIN PLANT ON PLANTFK=PLANTID WHERE PLANTID=2;
+---------------+
| SUM(P.WEIGHT) |
+---------------+
|            18 |
+---------------+
1 row in set (0.07 sec)


2. For some reason Erin has change his location for picking the tomato to North. Write the corresponding query.


mysql> select * from pickeed;
+---------+------------+------------+------------+--------+--------+
| plantFK | gardenerFK | locationFK | date1      | amount | weight |
+---------+------------+------------+------------+--------+--------+
|       0 |          2 |          0 | 2012-08-18 |     28 |   2.32 |
|       0 |          3 |          1 | 2012-08-16 |     12 |   1.02 |
|       2 |          1 |          3 | 2012-08-22 |     52 |  12.96 |
|       2 |          2 |          2 | 2012-08-28 |     18 |   4.58 |
|       3 |          3 |          3 | 2012-08-22 |     15 |   3.84 |
|       4 |          2 |          0 | 2012-07-16 |     23 |   0.52 |
+---------+------------+------------+------------+--------+--------+
6 rows in set (0.00 sec)

mysql> UPDATE pickeed set locationFK=(select locationid from location where name='NORTH') where gardenerFK=(select gardenerid from gardener where name='ERIN') and plantFK in(select plantid from plants where name='Tomato') ;
Query OK, 1 row affected (1.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from pickeed;
+---------+------------+------------+------------+--------+--------+
| plantFK | gardenerFK | locationFK | date1      | amount | weight |
+---------+------------+------------+------------+--------+--------+
|       0 |          2 |          0 | 2012-08-18 |     28 |   2.32 |
|       0 |          3 |          1 | 2012-08-16 |     12 |   1.02 |
|       2 |          1 |          3 | 2012-08-22 |     52 |  12.96 |
|       2 |          2 |          2 | 2012-08-28 |     18 |   4.58 |
|       3 |          3 |          1 | 2012-08-22 |     15 |   3.84 |
|       4 |          2 |          0 | 2012-07-16 |     23 |   0.52 |
+---------+------------+------------+------------+--------+--------+
6 rows in set (0.00 sec)



3. Insert a new column 'Exper' of type Number (30) to the 'gardener' table which stores Experience of the of person. How will you modify this to varchar2(30).
mysql> alter table gardener add column Exper int(30);
Query OK, 0 rows affected (1.78 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc gardener;
+------------+-------------+------+-----+---------+-------+
| Field      | Type        | Null | Key | Default | Extra |
+------------+-------------+------+-----+---------+-------+
| gardenerid | int(11)     | NO   | PRI | NULL    |       |
| name       | varchar(30) | YES  |     | NULL    |       |
| age        | int(11)     | YES  |     | NULL    |       |
| Exper      | int(30)     | YES  |     | NULL    |       |
+------------+-------------+------+-----+---------+-------+
4 rows in set (0.00 sec)

mysql> alter table gardener modify Exper varchar(30);
Query OK, 4 rows affected (4.16 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> desc gardener;
+------------+-------------+------+-----+---------+-------+
| Field      | Type        | Null | Key | Default | Extra |
+------------+-------------+------+-----+---------+-------+
| gardenerid | int(11)     | NO   | PRI | NULL    |       |
| name       | varchar(30) | YES  |     | NULL    |       |
| age        | int(11)     | YES  |     | NULL    |       |
| Exper      | varchar(30) | YES  |     | NULL    |       |
+------------+-------------+------+-----+---------+-------+
4 rows in set (0.98 sec)

4. Write a query to find the plant name which required seeds less than 20 which plant on 14-APR
mysql> select p.name from plant p inner join planted pl on p.plantid=pl.plantFK where seeds<20;
+--------+
| name   |
+--------+
| Carrot |
| Corn   |
+--------+
2 rows in set (0.00 sec)

5. List the amount of sunlight and water to all plants with names that start with letter 'c' or letter 'r'.
mysql> SELECT name,sunlight,water from plants where lower(name) like 'c%' or lower(name) like 'r%';
+--------+----------+-------+
| name   | sunlight | water |
+--------+----------+-------+
| Carrot |     0.26 |  0.82 |
| Corn   |     0.44 |  0.76 |
| Radish |     0.28 |  0.84 |
+--------+----------+-------+
3 rows in set (0.00 sec)


6. Write a valid SQL statement that displays the plant name and the total amount of seed required for each plant that were plant in the garden. The output should be in descending order of plant name.

mysql> select p.name, seeds from plant p inner join planted pl on p.plantid=pl.plantFK order by p.name desc;
+---------+-------+
| name    | seeds |
+---------+-------+
| Tomato  |    38 |
| Radish  |    30 |
| Lettuce |    30 |
| Corn    |    20 |
| Corn    |    12 |
| Carrot  |    28 |
| Carrot  |    14 |
| Beet    |    36 |
+---------+-------+
8 rows in set (0.00 sec)

7. Write a valid SQL statement that calculates the average number of items produced per seed planted for each plant type:( (Average Number of Items = Total Amount Picked / Total Seeds Planted

mysql> select (sum(amount)/sum(seeds)) as 'Average Number Of Items' from pickeed pi inner join planted pl on pi.plantFK=pl.plantFK group by pi.plantFK;
+-------------------------+
| Average Number Of Items |
+-------------------------+
|                  0.9524 |
|                  2.1875 |
|                  0.3947 |
|                  0.7667 |
+-------------------------+

8. Write a valid SQL statement that would produce a result set like the following:

 name |  name  |    date    | amount 
------|--------|------------|-------- 
 Tim  | Radish | 2012-07-16 |     23 
 Tim  | Carrot | 2012-08-18 |     28 
 
 mysql> select g.name,p.name,pi.date1,pi.amount from pickeed pi inner join plants p on pi.plantFK=p.plantid inner join gardener g on pi.gardenerFK=g.gardenerid where g.name='Tim' and amount>20;
+------+--------+------------+--------+
| name | name   | date1      | amount |
+------+--------+------------+--------+
| Tim  | Carrot | 2012-08-18 |     28 |
| Tim  | Radish | 2012-07-16 |     23 |
+------+--------+------------+--------+
2 rows in set (0.00 sec)
9. Find out persons who picked from the same location as he/she planted.

mysql> select distinct p.name from gardener p inner join pickeed pi on p.gardenerid=pi.gardenerFK inner join planted pl on pl.gardenerFK=p.gardenerid where pi.locationFK=pl.locationFK ;
+--------+
| name   |
+--------+
| Father |
| Tim    |
+--------+
2 rows in set (0.00 sec)

10. Create a view that lists all the plant names picked from all locations except ’West’ in the month of August.

mysql> create view user as select p.name from plants p join picked pi on p.plantid=pi.plantFK inner join location l on l.locationid=pi.locationFK where l.name !='WEST';
Query OK, 0 rows affected (1.18 sec)

mysql> select * from user;
+--------+
| name   |
+--------+
| Carrot |
| Radish |
| Carrot |
| Radish |
| Radish |
| Carrot |
| Tomato |
| Carrot |
| Corn   |
| Corn   |
| Tomato |
+--------+
11 rows in set (0.07 sec)





